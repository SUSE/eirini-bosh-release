# Add eirini
- type: replace
  path: /instance_groups/-
  value:
    name: eirini
    release: eirini
    azs: [z1]
    instances: 1
    vm_type: minimal
    stemcell: default
    networks:
    - name: default
    jobs:
    - name: opi
      release: eirini
      properties:
        opi:
          kube_namespace: eirini
          kube_service_host: ""
          kube_service_port: ""
          registry_address: registry.((system_domain))
          nats_password: ((nats_password))
          nats_ip: q-s0.nats.default.cf.bosh
          certs_secret_name: cc-certs-secret
          cc_internal_api: https://cloud-controller-ng.service.cf.internal:9023
          cc_uploader_ip: ""
          stager_image: eirini/recipe
          metrics_source_address: ""
          loggregator_address: localhost:3458
          loggregator_cert: ((loggregator_tls_agent.certificate))
          loggregator_key: ((loggregator_tls_agent.private_key))
          loggregator_ca: ((loggregator_tls_agent.certificate))
          cc_cert: ((cc_bridge_tps.certificate))
          cc_key: ((cc_bridge_tps.private_key))
          cc_ca: ((service_cf_internal_ca.certificate))
          k8s:
            host_url: ((k8s_host_url))
            service_account:
              name: ((k8s_service_username))
              token: ((k8s_service_token))
            node_ca: ((k8s_node_ca))

# Attach a persistent disk to bits-service VM to store eirinifs
- type: replace
  path: /instance_groups/name=bits/persistent_disk_type?
  value: 5GB

# Enable Docker registry on bits-service (used by OPI)
- type: replace
  path: /instance_groups/name=bits/jobs/name=bits-service/properties/bits-service/enable_registry?
  value: true
- type: replace
  path: /instance_groups/name=bits/jobs/name=bits-service/properties/bits-service/registry_endpoint?
  value: "https://registry.((system_domain))"
- type: replace
  path: /instance_groups/name=bits/jobs/name=route_registrar/properties/route_registrar/routes/name=bits-service/uris/-
  value: registry.((system_domain))
- type: replace
  path: /variables/name=bits_service_ssl/options/alternative_names/-
  value: registry.((system_domain))

# Add eirinifs job to the bits-service to copy the tarball into the bits-service VM
- type: replace
  path: /instance_groups/name=bits/jobs/name=eirinifs?
  value:
    name: eirinifs
    release: eirini
- type: replace
  path: /instance_groups/name=bits/jobs/name=bits-service/properties/bits-service/rootfs?/blobstore_type?
  value: local

- type: replace
  path: /releases/name=bits-service/version?
  value: latest
- type: replace
  path: /releases/name=eirini?/version?
  value: latest

# Enable OPI in CC
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/url?
  value: http://q-s0.eirini.default.cf.bosh:8085
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/opi_staging?
  value: false

- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/url?
  value: http://q-s0.eirini.default.cf.bosh:8085
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/opi_staging?
  value: false

- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/url?
  value: http://q-s0.eirini.default.cf.bosh:8085
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/opi_staging?
  value: false

# Make loggregator agent cert validate correctly for fluentd in k8s nodes
- type: replace
  path: /variables/name=loggregator_tls_agent/options/alternative_names?
  value:
    - localhost
    - metron
